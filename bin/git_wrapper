#!/usr/bin/env bash
################################################
# HELP
################################################
help(){
    echo "This function is my personal wrapper for git"
    echo ""
    echo "Syntax: _git [-c|-p|-r|-P <path>]"
    echo "-c,           configure any git repo"
    echo "-p <msg>,     automatic git push w/ optional message"
    echo "-P <path>,    go to <path> then push"   
    echo "-r,           recursively push repo->subrepos"
}

################################################
# MAIN
################################################
flag=$1
opt=$2

# Empty flag
if [ $flag = '' ]; then
    echo "No argument given"
    help

# Configure
elif [ $flag = '-c' ]; then
    git config --global user.email $EMAIL
    git config --global user.name  $GITHUB_USERNAME
    git config --global credential.helper 'cache --timeout=3600'
    git remote rm origin
    git remote add origin "https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/$GITHUB_USERNAME/$(basename `git rev-parse --show-toplevel`).git"

# Push
elif [ $flag = '-p' ]; then
    clean -t
    # If no msg is given
    [ -z "$opt" ] && opt="auto push run at $(date)" 
    # add all changes
    git add .
    # Get current branch
    branch=$(git rev-parse --abbrev-ref HEAD)
    # Commit and push to origin $branch
    git commit -m "$opt"
    git push -u origin $branch

# Push at path
elif [ $flag = '-P' ]; then
    cd $opt
    clean -t
    msg="auto push run at $(date)"
    git add .
    branch=$(git rev-parse --abbrev-ref HEAD)
    git commit -m "$msg"
    git push -u origin $branch

# Recursive
elif [ $flag = '-r' ]; then
    echo "_git -r is a work in progress"
    # Cheating a little but lets offload this problem to python
    python3.8 ~/.bash/python/git_recursive.py -p $(pwd)

# Invalid argument
else
    echo "Invalid argument given: $flag"
    help
fi
