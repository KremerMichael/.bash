#!/usr/bin/env bash


#=================================================================================================#
# SET MACHINE
#=================================================================================================#
unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     export MACHINE=linux;;
    Darwin*)    export MACHINE=mac;;
    CYGWIN*)    export MACHINE=cygwin;;
    MINGW*)     export MACHINE=minGw;;
    *)          export MACHINE="UNKNOWN:${unameOut}"
esac


#=================================================================================================#
# VARIABLES
#=================================================================================================#
export EMAIL="kremeremichael@gmail.com"
export GITHUB_USERNAME="KremerMichael"
export FIRST_NAME="Michael"
export LAST_NAME="Kremer"
export EMPLOYMENT="Boston University"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi


#=================================================================================================#
# BASH SOURCES
#=================================================================================================#
#Add functions to path
if [ -d $SHELL_PATH/bin ]; then
    export PATH="$SHELL_PATH/bin:$PATH"
fi

#Store destinations for ssh in etc/bash_ssh
if [ -f $SHELL_PATH/etc/bash_ssh ]; then
    . $SHELL_PATH/etc/bash_ssh
fi

#Store color setup in etc/bash_colors and load them with this
if [ -f $SHELL_PATH/etc/colors ]; then
    . $SHELL_PATH/etc/colors
fi

#Store alias definitions in etc/aliases and load them with this
if [ -f $SHELL_PATH/etc/aliases ]; then
    . $SHELL_PATH/etc/aliases
fi

# Note that private is ignored in the git repo,
# It's probably smart to not host ssh usernames and destinations remotely
# so you'll have to define them each time you clone the repo
if [ -f $SHELL_PATH/etc/private ]; then
    . $SHELL_PATH/etc/private
fi

# enable programmable completion features
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
	. /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
	. /etc/bash_completion
    fi
fi
